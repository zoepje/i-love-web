@import '@fontsource/manrope';
@import '@fontsource/jetbrains-mono';

@font-face {
	font-family: 'Decovar Alpha';
	src: url(/fonts/Decovar_Alpha_VF_Font.ttf);
}

html {
	/* font */
	--font-sans: 'Manrope', sans-serif;
	--font-mono: 'JetBrains Mono', monospace;

	/* dark */
	--brand-dark: var(--teal-4);
	--text-1-dark: var(--gray-3);
	--text-2-dark: var(--gray-5);
	--text-alt-dark: var(--gray-11);
	--color-1-dark: var(--purple-4);
	--color-2-dark: var(--indigo-4);
	--color-3-dark: var(--green-4);
	--color-4-dark: var(--red-5);
	--surface-1-dark: var(--gray-12);
	--surface-2-dark: var(--gray-11);
	--surface-3-dark: var(--gray-10);
	--surface-4-dark: var(--gray-9);
	--background-dark: var(--gradient-8);
	--border-dark: var(--gray-9);

	/* light */
	--brand-light: var(--teal-7);
	--text-1-light: var(--gray-8);
	--text-2-light: var(--gray-7);
	--text-alt-light: var(--gray-1);
	--color-1-light: var(--purple-7);
	--color-2-light: var(--indigo-7);
	--color-3-light: var(--green-10);
	--color-4-light: var(--red-10);
	--surface-1-light: var(--gray-0);
	--surface-2-light: var(--gray-1);
	--surface-3-light: var(--gray-2);
	--surface-4-light: var(--gray-3);
	--background-light: none;
	--border-light: var(--gray-4);

	--link-visited: var(--color-1);
}

:root {
	color-scheme: dark;

	--brand: var(--brand-dark);
	--text-1: var(--text-1-dark);
	--text-2: var(--text-2-dark);
	--text-alt: var(--text-alt-dark);
	--color-1: var(--color-1-dark);
	--color-2: var(--color-2-dark);
	--color-3: var(--color-3-dark);
	--color-4: var(--color-4-dark);
	--surface-1: var(--surface-1-dark);
	--surface-2: var(--surface-2-dark);
	--surface-3: var(--surface-3-dark);
	--surface-4: var(--surface-4-dark);
	--background: var(--background-dark);
	--border: var(--border-dark);
}

@media (prefers-color-scheme: light) {
	:root {
		color-scheme: light;

		--brand: var(--brand-light);
		--text-1: var(--text-1-light);
		--text-2: var(--text-2-light);
		--text-alt: var(--text-alt-light);
		--color-1: var(--color-1-light);
		--color-2: var(--color-2-light);
		--color-3: var(--color-3-light);
		--color-4: var(--color-4-light);
		--surface-1: var(--surface-1-light);
		--surface-2: var(--surface-2-light);
		--surface-3: var(--surface-3-light);
		--surface-4: var(--surface-4-light);
		--background: var(--background-light);
		--border: var(--border-light);
	}
}

[color-scheme='dark'] {
	color-scheme: dark;

	--brand: var(--brand-dark);
	--text-1: var(--text-1-dark);
	--text-2: var(--text-2-dark);
	--text-alt: var(--text-alt-dark);
	--color-1: var(--color-1-dark);
	--color-2: var(--color-2-dark);
	--color-3: var(--color-3-dark);
	--color-4: var(--color-4-dark);
	--surface-1: var(--surface-1-dark);
	--surface-2: var(--surface-2-dark);
	--surface-3: var(--surface-3-dark);
	--surface-4: var(--surface-4-dark);
	--background: var(--background-dark);
	--border: var(--border-dark);

	:where(.btn,button,input:is([type=button],[type=submit],[type=reset])), :where(input[type=file])::-webkit-file-upload-button, :where(input[type=file])::file-selector-button {
		--_highlight: var(--_highlight-dark);
		--_bg: var(--_bg-dark);
		--_ink-shadow: var(--_ink-shadow-dark);
	}
}

[color-scheme='light'] {
	color-scheme: light;

	--brand: var(--brand-light);
	--text-1: var(--text-1-light);
	--text-2: var(--text-2-light);
	--text-alt: var(--text-alt-light);
	--color-1: var(--color-1-light);
	--color-2: var(--color-2-light);
	--color-3: var(--color-3-light);
	--color-4: var(--color-4-light);
	--surface-1: var(--surface-1-light);
	--surface-2: var(--surface-2-light);
	--surface-3: var(--surface-3-light);
	--surface-4: var(--surface-4-light);
	--background: var(--background-light);
	--border: var(--border-light);
}

html,
body {
	height: 100%;
}

html {
	color: var(--text-1);
	accent-color: var(--color-1);
	background-image: var(--background);
	background-attachment: fixed;
}

h1 {
	font-size: var(--font-size-7);
	margin-bottom: 1.5rem;
}

img {
	border-radius: var(--radius-3);
}

ul,
ol {
	padding: 0;
}

li {
	padding-inline-start: 0;
}

li::marker {
	color: var(--color-2);
}

a {
	position: relative;
	transition: .3s ease-in-out;
}

a:before {
	content: '';
	position: absolute;
	width: 100%;
	height: 4px;
	border-radius: 4px;
	background-color: var(--color-1);
	bottom: -4px;
	left: 0;
	transform-origin: right;
	transform: scaleX(0);
	transition: transform .3s ease-in-out;
}

a:hover {
	text-decoration: none;
}

a:hover::before {
	transform-origin: left;
  transform: scaleX(1);
}

.surface-1 {
	background-color: var(--surface-1);
	color: var(--text-2);
}

.surface-2 {
	background-color: var(--surface-2);
	color: var(--text-2);
}

.surface-3 {
	background-color: var(--surface-3);
	color: var(--text-1);
}

.surface-4 {
	background-color: var(--surface-4);
	color: var(--text-1);
}

/* ... */
.prose {
	max-width: calc(100vw - 2*var(--size-7));
}

.prose :is(h2, h3, h4, h5, h6) {
	margin-top: var(--size-6);
	margin-bottom: var(--size-3);
}

.prose :is(h2) {
	margin-bottom: var(--size-1);
	font-size: var(--font-size-3);
	color: var(--color-2);
}

.prose p:not(:is(h2, h3, h4, h5, h6) + p) {
	margin-top: var(--size-7);
}

.prose blockquote {
	margin-block: var(--size-4);
}

.prose p:is(blockquote p) {
	margin-top: 0;
}

.prose span.tip {
	font-weight: bold;
	border-inline-start-width: var(--border-size-3);
}

.prose span.tip::before {
	content: "ðŸ’¡";
}

.prose :is(ul, ol) {
	padding-left: var(--size-5);
}

.prose :is(ul, ol) li {
	margin-block: var(--size-2);
	padding-inline-start: var(--size-2);
}

.prose pre {
	background: var(--surface-4-dark);
	overflow: scroll;
	max-inline-size: 100%;
	margin-block: var(--size-2);
	padding: var(--size-3);
	border-radius: 8px;
	tab-size: 2;
	font-family: var(--font-mono);

	& code {
		background: var(--surface-4-dark);
	}
}

.prose code {
	background-color: var(--surface-4);
	font-size: var(--font-size-1);
}

.prose .uitleg, .prose .uitleg-2 {
	padding-left: 10px;
	font-style: italic;
	font-size: var(--font-size-1);
}

.prose .uitleg {
	color: var(--color-2); 
}

.prose .uitleg-2 {
	color: var(--brand);
}

.prose dt {
	color: var(--color-3);
}

.prose dd {
	max-inline-size: var(--size-content-3);
}	
.prose img {
	border: var(--color-1) var(--border-size-2) solid;
}

.prose :where(:not(pre)>code,kbd) {
	white-space: wrap;
}

:where(a[href]) svg path {
	fill: var(--brand, var(--link));
}

:where(a[href]):where(:visited) svg path {
	fill: var(--link-visited);
}

@media only screen and (min-width: 600px){
	body {
		margin: var(--size-5);
	}

	h1 {
		font-size: var(--font-size-8);
	}
}
